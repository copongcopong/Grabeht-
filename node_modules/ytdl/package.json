{
  "name": "ytdl",
  "description": "A pure Javascript streaming youtube video downloader.",
  "keywords": [
    "youtube",
    "download",
    "video"
  ],
  "version": "0.1.16",
  "repository": {
    "type": "git",
    "url": "git://github.com/fent/node-ytdl.git"
  },
  "author": {
    "name": "Roly Fentanes",
    "url": "https://github.com/fent"
  },
  "main": "./lib/index.js",
  "bin": {
    "ytdl": "./bin/ytdl.js"
  },
  "scripts": {
    "test": "mocha -R spec test/*-test.js"
  },
  "directories": {
    "lib": "./lib"
  },
  "dependencies": {
    "cliff": "~0.1.8",
    "colors": "~0.6.0-1",
    "eventvat": "~0.2.1",
    "hashish": "~0.0.4",
    "nomnom": "~1.5.2",
    "progress-bar": "~0.1.1",
    "request": "~2.9.203",
    "streamify": "~0.1.0"
  },
  "devDependencies": {
    "mocha": "x",
    "muk": "~0.2.0",
    "stream-equal": "~0.1.0"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/fent/node-ytdl/raw/master/LICENSE"
    }
  ],
  "readme": "# node-ytdl [![Build Status](https://secure.travis-ci.org/fent/node-ytdl.png)](http://travis-ci.org/fent/node-ytdl)\n\nYet another youtube downloading module. This time written with only Javascript and a more node-friendly streaming interface.\n\n\n# Usage\n\n```js\nvar fs = require('fs');\nvar ytdl = require('ytdl');\n\nytdl('http://www.youtube.com/watch?v=A02s8omM_hI')\n  .pipe(fs.createWriteStream('video.flv'));\n```\n\n\n# API\n### ytdl(url, options)\n\nAttempts to download a video from the given url. Returns a readable stream. `options` can have the following keys\n\n* `quality` - Video quality to download. Can be an [itag value](http://en.wikipedia.org/wiki/YouTube#Quality_and_codecs) value, `highest`, or `lowest`. Defaults to `highest`.\n* `start` - Where to begin downloading the video in milliseconds or in a time format ie `1m34s`.\n* `filter` - You can give a filtering function that gets called with each format available. Used to decide what format to download.\n\n```js\n// Example with `filter` option.\nytdl(url, { filter: function(format) { return format.container === 'mp4'; } })\n  .pipe(fs.createWriteStream('vide.flv'));\n```\n\n`options` can also have any [request](https://github.com/mikeal/request) options.\n\nThe returned readable stream emits these additional events.\n\n### Event: 'info'\n* `Object` - Info.\n* `Object` - Format.\n\nEmitted when the a video's `info` hash is fetched. Along with the chosen format metadata to download. `format.url` might be different if `start` was given. `format.size` will also be available.\n\nInfo and format may look like [this](https://gist.github.com/fent/6c8251132e1addb5121e).\n\n### ytdl.getInfo(url, callback(err, info))\n\nUse this if you only want to get metainfo from a video.\n\n### ytdl.cache\n\nA [memory cache](https://github.com/hij1nx/EventVat) is used to store information about recently retrieved videos. This is used to prevent double requests on videos that you want to retrieve the info of, and then download.\n\n\n# Install\n\n    npm install ytdl\n\n# CLI\n\nytdl can be used from the command line too. Install with the `-g` flag to use it.\n\n    ytdl http://www.youtube.com/watch?v=_HSylqgVYQI > cat.flv\n\nAnd it streams!\n\n    Usage: ytdl <url> [options]\n\n    url     URL to the video.\n\n    Options:\n       -v, --version                  Print program version.\n       -q ITAG, --quality ITAG        Video quality to download. Default: `highest`\n       -s TIME, --start TIME          Where to begin the video. ie 1m3s, 45s, 2300.\n       -o FILE, --output FILE         Where to save the file. Default: stdout\n       --filter-container REGEXP      Filter in format container.\n       --unfilter-container REGEXP    Filter out format container.\n       --filter-resolution REGEXP     Filter in format resolution.\n       --unfilter-resolution REGEXP   Filter out format resolution.\n       --filter-encoding REGEXP       Filter in format encoding.\n       --unfilter-encoding REGEXP     Filter out format encoding.\n\n\n# Tests\nTests are written with [mocha](http://visionmedia.github.com/mocha/)\n\n```bash\nnpm test\n```\n\n# License\nMIT\n",
  "readmeFilename": "README.md",
  "_id": "ytdl@0.1.16",
  "_from": "ytdl@"
}
